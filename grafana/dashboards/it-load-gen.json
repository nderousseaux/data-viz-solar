{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Dashboard of solar generation of Italy and his power combustion",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": 1,
  "links": [],
  "panels": [
    {
      "description": "Overall informations about power consumption and production.",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 14,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Title\n\nFor markdown syntax help: [commonmark.org/help](https://commonmark.org/help/)",
        "mode": "markdown"
      },
      "pluginVersion": "11.3.1",
      "title": "Informations",
      "type": "text"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "description": "Ratio between solar energy and other energy for Italy",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 10,
        "x": 14,
        "y": 0
      },
      "id": 3,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto"
        },
        "editorMode": "code",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "let gen = 0;\nlet cons = 0;\n\nconst gen_series = context.panel.data.series.find(serie => serie.name === 'italy.gen');\nconst cons_series = context.panel.data.series.find(serie => serie.name === 'italy.cons');\n\n// Extracting the data\ngen = gen_series.fields.find(field => field.type === 'number').values.buffer || gen_series.fields.find(field => field.type === 'number').values[0];\ncons = cons_series.fields.find(field => field.type === 'number').values.buffer || cons_series.fields.find(field => field.type === 'number').values[0];\n\nlet other_sources = cons - gen;\n\n// Convert into GWh, but keep not floating \ngen = gen / 1000;\nother_sources = other_sources / 1000;\ncons = cons / 1000;\ngen = gen.toFixed(0);\nother_sources = other_sources.toFixed(0);\ncons = cons.toFixed(0);\n\nlet gen_percents = (gen / cons) * 100;\nlet other_percents = (other_sources / cons) * 100;\n\n\nlet data = [\n  { value: gen, name: 'Solar Power (GWh) - ' + gen_percents.toFixed(0) + '%' },\n  { value: other_sources, name: 'Other Sources (GWh) - ' + other_percents.toFixed(0) + '%', itemStyle: { color: '#fec05a' } }\n];\n\nreturn {\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [\n    {\n      type: 'pie',\n      radius: ['40%', '70%'],\n      padAngle: 5,\n      itemStyle: {\n        borderRadius: 10\n      },\n      label: {\n        show: true,\n        fontSize: 20,\n      },\n      emphasis: {\n        label: {\n          show: true,\n          fontSize: 24,\n          fontWeight: 'bold'\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: data\n    }\n  ]\n};",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "name": "default"
        },
        "visualEditor": {
          "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "6.5.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "groupBy": [],
          "measurement": "italy",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT sum(\"ItLoad\") FROM \"italy\" WHERE $timeFilter",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "ItLoad"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "sum"
              },
              {
                "params": [
                  "cons"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "ItSolarGen"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "sum"
              },
              {
                "params": [
                  "gen"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Energy mix",
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "description": "History of production of solar power and consumption of power in Italy",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 1,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto"
        },
        "editorMode": "code",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "\nlet time = [];\nlet power_gen = [];\nlet power_cons = [];\nlet power_import = [];\n\n// looking for serie named italy.power_gen\nconst serie_gen = context.panel.data.series.find(serie => serie.name === 'italy.power_gen');\nconst serie_cons = context.panel.data.series.find(serie => serie.name === 'italy.power_cons');\nconst serie_import = context.panel.data.series.find(serie => serie.name === 'italy.power_import');\n\n// Extracting the data\ntime = serie_gen.fields.find(field => field.type === 'time').values.buffer || serie_gen.fields.find(field => field.type === 'time').values;\npower_gen = serie_gen.fields.find(field => field.type === 'number').values.buffer || serie_gen.fields.find(field => field.type === 'number').values;\npower_cons = serie_cons.fields.find(field => field.type === 'number').values.buffer || serie_cons.fields.find(field => field.type === 'number').values;\npower_import = serie_import.fields.find(field => field.type === 'number').values.buffer || serie_import.fields.find(field => field.type === 'number').values;\n\n// Cut after comma\npower_gen = power_gen.map(value => value.toFixed(0));\npower_cons = power_cons.map(value => value.toFixed(0));\npower_import = power_import.map(value => value.toFixed(0));\n\n// Readable time, without the time, just the date\ntime = time.map(ts => new Date(ts).toLocaleString());\ntime = time.map(ts => ts.split(',')[0]);\n\nreturn {\n  legend: {\n    top: 'bottom',\n    data: ['Power Generation (MWh)', 'Power Consumption (MWh)', 'Power Import/Export (MWh)']\n  },\n  tooltip: {\n    trigger: 'axis',\n  },\n  xAxis: {\n    data: time\n  },\n  yAxis: {\n    axisLabel: {\n      formatter: '{value} MWh'\n    }\n  },\n  series: [\n    {\n      name: 'Power Generation (MWh)',\n      data: power_gen,\n      type: 'line',\n      areaStyle: {}\n    },\n    {\n      name: 'Power Consumption (MWh)',\n      data: power_cons,\n      type: 'line',\n      areaStyle: {}\n    },\n    {\n      name: 'Power Import/Export (MWh)',\n      data: power_import,\n      type: 'line',\n      areaStyle: {}\n    }\n  ]\n};",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "name": "default"
        },
        "visualEditor": {
          "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "6.5.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "groupBy": [
            {
              "params": [
                "1w"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "measurement": "italy",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT mean(\"ItSolarGen\") AS \"power_gen\", mean(\"ItLoad\") AS \"power_cons\", mean(\"ItSolarGen\") - mean(\"ItLoad\") AS \"power_import\"\nFROM \"italy\" WHERE $timeFilter GROUP BY time(1w)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "ItSolarGen"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "power_gen"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "ItLoad"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "power_cons"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "History",
      "type": "volkovlabs-echarts-panel"
    }
  ],
  "preload": false,
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "2015-12-31T23:00:00.000Z",
    "to": "2016-12-31T22:59:59.000Z"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Italy Solar Generation",
  "uid": "ee5xhimupbhtsf",
  "version": 1,
  "weekStart": ""
}